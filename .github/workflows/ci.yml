name: CI Pipeline

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  staging_pipeline:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache conda
      uses: actions/cache@v4
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ hashFiles('**/conda.yaml') }}
        restore-keys: |
          ${{ runner.os }}-conda-

    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        environment-file: conda.yaml
        activate-environment: mlflow_orchestration
        auto-activate-base: false
        use-only-tar-bz2: true
        
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        conda info
        conda list
        
    - name: Run MLflow pipeline
      shell: bash -l {0}
      env:
        WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        MLOPS_ENV_STAGING: ${{ secrets.MLOPS_ENV_STAGING }}
        WANDB_MODE: online
      run: |
        mlflow run . -e main

  testing_pipeline:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Cache conda
      uses: actions/cache@v4
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ hashFiles('**/conda.yaml') }}
        restore-keys: |
          ${{ runner.os }}-conda-
      
    - name: Run tests
      shell: bash -l {0}
      run: |
        pytest -q
        
    - name: Run linting
      shell: bash -l {0}
      run: |
        flake8 . --exit-zero
